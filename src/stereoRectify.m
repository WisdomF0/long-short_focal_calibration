% Auto-generated by stereoCalibrator app on 07-May-2024
%-------------------------------------------------------


% Define images to process
imageFileNames1 = {'/home/fyh/data/GPcar/calib/front_30_ext/000000.jpg',...
    '/home/fyh/data/GPcar/calib/front_30_ext/000001.jpg',...
    '/home/fyh/data/GPcar/calib/front_30_ext/000002.jpg',...
    '/home/fyh/data/GPcar/calib/front_30_ext/000003.jpg',...
    '/home/fyh/data/GPcar/calib/front_30_ext/000005.jpg',...
    '/home/fyh/data/GPcar/calib/front_30_ext/000007.jpg',...
    '/home/fyh/data/GPcar/calib/front_30_ext/000008.jpg',...
    };
imageFileNames2 = {'/home/fyh/data/GPcar/calib/side_right_ext/000000.jpg',...
    '/home/fyh/data/GPcar/calib/side_right_ext/000001.jpg',...
    '/home/fyh/data/GPcar/calib/side_right_ext/000002.jpg',...
    '/home/fyh/data/GPcar/calib/side_right_ext/000003.jpg',...
    '/home/fyh/data/GPcar/calib/side_right_ext/000005.jpg',...
    '/home/fyh/data/GPcar/calib/side_right_ext/000007.jpg',...
    '/home/fyh/data/GPcar/calib/side_right_ext/000008.jpg',...
    };

% Detect calibration pattern in images
detector = vision.calibration.stereo.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames1, imageFileNames2);

% Generate world coordinates for the planar patten keypoints
squareSize = 50;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Read one of the images from the first stereo pair
I1 = imread(imageFileNames1{1});
[mrows, ncols, ~] = size(I1);

% Calibrate the camera
[stereoParams, pairsUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', true, 'EstimateTangentialDistortion', true, ...
    'NumRadialDistortionCoefficients', 3, 'WorldUnits', 'millimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(stereoParams);

% Visualize pattern locations
h2=figure; showExtrinsics(stereoParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, stereoParams);

% You can use the calibration data to rectify stereo images.
I2 = imread(imageFileNames2{1});
[J1, J2, reprojectionMatrix] = rectifyStereoImages(I1, I2, stereoParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('StereoCalibrationAndSceneReconstructionExample')
% showdemo('DepthEstimationFromStereoVideoExample')

RD1 = stereoParams.CameraParameters1.RadialDistortion;
TD1 = stereoParams.CameraParameters1.TangentialDistortion;
D1 = [RD1(1), RD1(2), TD1(1), TD1(2), RD1(3)];
K1 = stereoParams.CameraParameters1.K;
skew1 = stereoParams.CameraParameters1.Skew;

RD2 = stereoParams.CameraParameters2.RadialDistortion;
TD2 = stereoParams.CameraParameters2.TangentialDistortion;
D2 = [RD2(1), RD2(2), TD2(1), TD2(2), RD2(3)];
K2 = stereoParams.CameraParameters2.K;
skew2 = stereoParams.CameraParameters2.Skew;

size = stereoParams.CameraParameters1.ImageSize;

R_rl = stereoParams.PoseCamera2.R;
T_rl = stereoParams.PoseCamera2.Translation;

X = struct('Kl', K1, 'Kr', K2, 'Dl', D1, 'Dr', D2, 'R_rl', R_rl, 'T_rl', T_rl, 'size', size);
file = '/home/fyh/data/GPcar/stereoParams.yaml';
yaml.dumpFile(file, X);
disp(X)
